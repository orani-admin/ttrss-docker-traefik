version: '3'

# set database password in .env
# please don't use quote (') or (") symbols in variables
networks: 
  web:
    external: true
  internal: 
    external: false

services:
  db:
    image: postgres:12-alpine
    restart: unless-stopped
    volumes:
      - db:/var/lib/postgresql/data
    environment:    
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    labels: 
      - traefik.enable=false
    networks: 
      - internal

  app:
    image: cthulhoo/ttrss-fpm-pgsql-static
    restart: unless-stopped
    environment:
      - DB_TYPE=pgsql
      - DB_HOST=db
      - DB_NAME=${POSTGRES_USER}
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
      - OWNER_UID=${OWNER_UID}
      - OWNER_GID=${OWNER_GID}
      - SELF_URL_PATH=${SELF_URL_PATH}
    volumes:
      - app:/var/www/html
    depends_on:
      - db
    labels: 
      - traefik.enable=false
    networks: 
      - internal

  updater:
    image: cthulhoo/ttrss-fpm-pgsql-static
    restart: unless-stopped
    environment:
      - DB_TYPE=pgsql
      - DB_HOST=db
      - DB_NAME=${POSTGRES_USER}
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
      - OWNER_UID=${OWNER_UID}
      - OWNER_GID=${OWNER_GID}
      - SELF_URL_PATH=${SELF_URL_PATH}
    volumes:
      - app:/var/www/html
    depends_on:
      - app
    command: /updater.sh
    labels: 
      - traefik.enable=false
    networks: 
      - internal

  backups:
    image: cthulhoo/ttrss-fpm-pgsql-static
    restart: unless-stopped
    environment:
      - DB_TYPE=pgsql
      - DB_HOST=db
      - DB_NAME=${POSTGRES_USER}
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
      - OWNER_UID=${OWNER_UID}
      - OWNER_GID=${OWNER_GID}
    volumes:
      - backups:/backups
      - app:/var/www/html
    depends_on:
      - db
    command: /dcron.sh -f
    labels: 
      - traefik.enable=false
    networks: 
      - internal

#  web:
#    image: cthulhoo/ttrss-web
#    restart: unless-stopped
#    ports:
#      - ${HTTP_PORT}:2015
#    volumes:
#      - app:/var/www/html:ro
#    depends_on:
#      - app

#  web-ssl:
#    image: cthulhoo/ttrss-web-ssl
#    restart: unless-stopped
#    environment:
#      - CADDYPATH=/certs
#      - HTTP_HOST=${HTTP_HOST}
#    ports:
#      - 80:80
#      - 443:443
#    volumes:
#      - app:/var/www/html:ro
#      - certs:/certs
#    depends_on:
#      - app

  web-nginx:
    image: cthulhoo/ttrss-web-nginx
    restart: unless-stopped
    ports:
      - '80'
    volumes:
      - app:/var/www/html:ro
    depends_on:
      - app
    networks: 
      - web
      - internal
    labels: 
      - traefik.backend=$BLOG_NAME
      - traefik.frontend.rule=Host:$BLOG_NAME.$MY_DOMAIN
      - traefik.docker.network=web

volumes:
  db:
  app:  
  certs:
  backups:
